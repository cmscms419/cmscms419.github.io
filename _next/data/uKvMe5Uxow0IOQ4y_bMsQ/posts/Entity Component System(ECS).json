{"pageProps":{"postData":{"id":"Entity Component System(ECS)","contentHtml":"<h1>Entity Component System(ECS)</h1>\n<p>참고</p>\n<p>https://m.blog.naver.com/kiseop91/221855589754</p>\n<h1>Filament의 ECS</h1>\n<h2>Entity</h2>\n<h2>Component</h2>\n<ul>\n<li>high-level APIs 의 component 는 engine level component 의 고정된 조합이라고 보면 됩니다. 고정된 노드 구조의 data structure 를 제공하여 app 개발자의 사용성을 증대 시킵니다. 고정된 노드 구조(상송형)로 APIs 에서 보이지만, engine level 에서는 ECS 로 구현되어 있습니다.</li>\n<li>VzAsset : entity 의 root 가 아닙니다. 현재 버전에서는 GLTF 파일 로드 후, 소유권을 이전하지 않은 asset 들 (예. 애니메이션, skeleton 등), 을 포함하고 있는 component 입니다. 추후, 해당 asset 의 모든 세부 component 들의 소유권을 APIs 로 이전할 예정이며, 이 경우, VzAsset 은 없어질 수 있습니다.  즉, 임시 버전으로 보면 됩니다.</li>\n</ul>\n<h2>System</h2>\n<p>System 은 components 들을 input 으로 받아 이들을 수정하거나 새로운 components를 생성, 또는 image or file 로 output 하는 함수들입니다.</p>\n<p>ECS 에서 System 에 해당 하는 것은 현재</p>\n<ul>\n<li>VzRenderer::Render</li>\n<li>LoadFileIntoAsset</li>\n<li>VzAsset::Animation...</li>\n<li>VzCamera::Controller... (이건 system 으로 보기는 어렵고 헬퍼?!)</li>\n</ul>\n<p>밖에 없습니다.\nSystem 은 components 들을 input 으로 받아 이들을 수정하거나 새로운 components 를 생성, 또는 image or file 로 output 하는 함수들입니다.</p>\n<p>H API는 ECS 지우기</p>\n"}},"__N_SSG":true}